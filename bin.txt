# Creating 3d scatter figure
fig = plt.figure(figsize = (8, 8))
ax = plt.axes(projection ="3d")

# Creating plot
ax.scatter3D(df.N, df.P, df.rainfall, c=df.temperature, cmap="rainbow", s=10)
plt.title("3D scatter plot")
ax.set_xlabel("ratio of Nitrogen content in soil")
ax.set_ylabel("ratio of Phosphorous content in soil")
ax.set_zlabel("rainfall in mm")

# show plot
plt.show()

## Preprocessing
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(df_cor)
scaler.transform(df_cor)

# Cross Validation
score = cross_val_score(NBC_fitted,features,target,cv=5)
print('Cross validation score: ',score)

## single tree
# Extract single tree
estimator = RFC_Model.estimators_[2]

from sklearn.tree import export_graphviz
# Export as dot file
export_graphviz(estimator, out_file='tree.dot',
                feature_names = df.drop(['label'], axis = 1),
                class_names = df['label'],
                rounded = True, proportion = False, filled = True)

# Convert to png using system command (requires Graphviz)
from subprocess import call
call(['dot', '-Tpng', 'tree.dot', '-o', 'tree.png', '-Gdpi=600'])

# Display in jupyter notebook
from IPython.display import Image
Image(filename = 'tree.png')

# Decision Tree
from sklearn.datasets import load_wine

wine = load_wine()
X = wine.data
y = wine.target

import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

fig = plt.figure(figsize=(15, 10))
plot_tree(RFC_Model.estimators_[0],
          feature_names=wine.feature_names,
          class_names=wine.target_names,
          filled=True, impurity=True,
          rounded=True)

# https://towardsdatascience.com/4-ways-to-visualize-individual-decision-trees-in-a-random-forest-7a9beda1d1b7